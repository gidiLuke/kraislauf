name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and test backend
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          target: ci
          load: true
          tags: kraislauf-ci:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run backend tests
        run: |
          docker run --rm kraislauf-ci:latest bash -c "cd backend && pytest"

      - name: Run frontend tests
        run: |
          docker run --rm kraislauf-ci:latest bash -c "cd frontend && export PNPM_HOME=\"/root/.local/share/pnpm\" && export PATH=\"\$PNPM_HOME:\$PATH\" && pnpm test"

  build-frontend:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build frontend
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          target: frontend-build
          load: true
          tags: kraislauf-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract frontend build artifacts
        run: |
          mkdir -p ./frontend-dist
          docker create --name frontend kraislauf-frontend:latest
          docker cp frontend:/app/frontend/out/. ./frontend-dist
          docker rm frontend

      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: ./frontend-dist

  build-backend:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          target: runtime
          push: true
          tags: ghcr.io/${{ github.repository }}/backend:latest,ghcr.io/${{ github.repository }}/backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
